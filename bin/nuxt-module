#!/usr/bin/env node

process.env.DEBUG = process.env.DEBUG || 'nuxt-module:*'

const { join, resolve } = require('path')
const fs = require('fs')
const parseArgs = require('minimist')
const ModuleBuilder = require('../lib')
const debug = require('debug')('nuxt-module:')

const argv = parseArgs(process.argv.slice(2), {
    alias: {
        h: 'help',
        c: 'config-file'
    },
    boolean: ['h'],
    string: ['c'],
    default: {
        c: 'nuxt.module.config.js'
    }
})

if (argv.help) {
    console.log(`
          Description
            Nuxt Standard Module Builder
          Usage
            $ nuxt-module
          Options
            --config-file, -c   Path to Nuxt.js config file (default: nuxt.module.config.js)
            --help, -h          Displays this message
        `)
    process.exit(0)
}

const rootDir = resolve(argv._[0] || '.')
const nuxtModuleConfigFile = resolve(rootDir, argv['config-file'])

let options = {}

if (fs.existsSync(nuxtModuleConfigFile)) {
    options = require(nuxtModuleConfigFile)
} else if (argv['config-file'] !== 'nuxt.module.config.js') {
    console.error(`> Could not load config file ${argv['config-file']}`)
    process.exit(1)
}

if (typeof options.rootDir !== 'string') {
    options.rootDir = rootDir
}

// Build module
debug('Starting build')
const builder = new ModuleBuilder(options)
builder.build().catch(console.error)
